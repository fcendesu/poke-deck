version: "3.8"

services:
  # PostgreSQL Database (Production)
  postgres:
    image: postgres:15-alpine
    container_name: pokedeck-postgres-prod
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - pokedeck-network
    restart: unless-stopped

  # Backend Production
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pokedeck-backend-prod
    environment:
      NODE_ENV: production
      PORT: 5000
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      FRONTEND_URL: ${FRONTEND_URL}
      JWT_SECRET: ${JWT_SECRET}

      # Email Configuration (use cloud service)
      EMAIL_HOST: ${EMAIL_HOST} # smtp.sendgrid.net
      EMAIL_PORT: ${EMAIL_PORT} # 587
      EMAIL_SECURE: ${EMAIL_SECURE} # false
      EMAIL_USER: ${EMAIL_USER} # apikey (for SendGrid)
      EMAIL_PASS: ${EMAIL_PASS} # your-api-key
      EMAIL_FROM: ${EMAIL_FROM} # noreply@yourdomain.com
    depends_on:
      - postgres
    networks:
      - pokedeck-network
    restart: unless-stopped

  # Frontend Production
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: pokedeck-frontend-prod
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - pokedeck-network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: pokedeck-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl # For SSL certificates
    depends_on:
      - frontend
      - backend
    networks:
      - pokedeck-network
    restart: unless-stopped

volumes:
  postgres_prod_data:

networks:
  pokedeck-network:
    driver: bridge
